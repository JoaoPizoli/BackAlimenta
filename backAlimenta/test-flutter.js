/**
 * üß™ Teste Completo para Flutter - Login e Alimentos
 * Verifica se o login funciona e se os dados de alimentos est√£o dispon√≠veis
 */

const axios = require('axios');

async function testForFlutter() {
    const baseURL = 'http://127.0.0.1:3333';
    
    console.log('üì± === TESTE PARA FLUTTER APP ===\n');
    
    // Dados de login para teste
    const credenciais = {
        nutricionista: {
            email: 'carlos@nutri.com',
            senha: '123456'
        },
        paciente: {
            email: 'maria@paciente.com', 
            senha: '123456'
        }
    };

    console.log('üîë CREDENCIAIS PARA USAR NO FLUTTER:');
    console.log('üìß Email Nutricionista:', credenciais.nutricionista.email);
    console.log('üîí Senha Nutricionista:', credenciais.nutricionista.senha);
    console.log('üìß Email Paciente:', credenciais.paciente.email);
    console.log('üîí Senha Paciente:', credenciais.paciente.senha);
    console.log('');

    let nutriToken = null;
    let pacienteToken = null;

    // Teste 1: Login do Nutricionista
    try {
        console.log('1Ô∏è‚É£ Testando login do NUTRICIONISTA...');
        const response = await axios.post(`${baseURL}/auth/login-nutri`, {
            email: credenciais.nutricionista.email,
            senha: credenciais.nutricionista.senha
        });

        if (response.data && response.data.token) {
            nutriToken = response.data.token;
            console.log('‚úÖ Login nutricionista OK!');
            console.log('   Token:', nutriToken.substring(0, 20) + '...');
            console.log('   Nutri ID:', response.data.nutri?.nutri_id || response.data.id);
            console.log('   Nome:', response.data.nutri?.nome || 'N/A');
        } else {
            console.log('‚ùå Login nutricionista falhou - sem token');
        }
    } catch (error) {
        console.log('‚ùå Erro no login nutricionista:', error.response?.data?.message || error.message);
    }

    // Teste 2: Login do Paciente  
    try {
        console.log('\n2Ô∏è‚É£ Testando login do PACIENTE...');
        const response = await axios.post(`${baseURL}/auth/login-paciente`, {
            email: credenciais.paciente.email,
            senha: credenciais.paciente.senha
        });

        if (response.data && response.data.token) {
            pacienteToken = response.data.token;
            console.log('‚úÖ Login paciente OK!');
            console.log('   Token:', pacienteToken.substring(0, 20) + '...');
            console.log('   Paciente ID:', response.data.paciente?.paciente_id || response.data.id);
            console.log('   Nome:', response.data.paciente?.nome || 'N/A');
        } else {
            console.log('‚ùå Login paciente falhou - sem token');
        }
    } catch (error) {
        console.log('‚ùå Erro no login paciente:', error.response?.data?.message || error.message);
    }

    // Teste 3: Buscar Alimentos (sem autentica√ß√£o - deve funcionar)
    try {
        console.log('\n3Ô∏è‚É£ Testando busca de ALIMENTOS...');
        const response = await axios.get(`${baseURL}/alimentos`);

        if (response.data && Array.isArray(response.data)) {
            console.log('‚úÖ Alimentos dispon√≠veis!');
            console.log(`   üìä Total: ${response.data.length} alimentos`);
            
            // Mostra os primeiros 5 alimentos
            console.log('   ü•ó Primeiros alimentos:');
            response.data.slice(0, 5).forEach((alimento, index) => {
                console.log(`      ${index + 1}. ${alimento.nome} - ${alimento.energia_kcal}kcal`);
            });

            if (response.data.length >= 10) {
                console.log('   ‚úÖ Dados suficientes para o app Flutter!');
            } else {
                console.log('   ‚ö†Ô∏è  Poucos alimentos cadastrados');
            }
        } else {
            console.log('‚ùå Falha ao buscar alimentos - resposta inv√°lida');
        }
    } catch (error) {
        console.log('‚ùå Erro ao buscar alimentos:', error.response?.data?.message || error.message);
    }

    // Teste 4: Buscar alimentos com filtro
    try {
        console.log('\n4Ô∏è‚É£ Testando busca de alimentos com FILTRO...');
        const response = await axios.get(`${baseURL}/alimentos?search=arroz`);

        if (response.data && Array.isArray(response.data)) {
            console.log('‚úÖ Busca com filtro funcionando!');
            console.log(`   üìä Encontrados: ${response.data.length} alimentos com "arroz"`);
            
            response.data.slice(0, 3).forEach((alimento, index) => {
                console.log(`      ${index + 1}. ${alimento.nome}`);
            });
        }
    } catch (error) {
        console.log('‚ùå Erro na busca filtrada:', error.response?.data?.message || error.message);
    }

    // Teste 5: Testar endpoint de pacientes (com autentica√ß√£o)
    if (nutriToken) {
        try {
            console.log('\n5Ô∏è‚É£ Testando endpoint de PACIENTES (autenticado)...');
            const response = await axios.get(`${baseURL}/pacientes`, {
                headers: {
                    'Authorization': `Bearer ${nutriToken}`
                }
            });

            if (response.data && Array.isArray(response.data)) {
                console.log('‚úÖ Endpoint de pacientes OK!');
                console.log(`   üìä Total pacientes: ${response.data.length}`);
            } else {
                console.log('‚ùå Resposta inv√°lida do endpoint pacientes');
            }
        } catch (error) {
            console.log('‚ùå Erro no endpoint pacientes:', error.response?.data?.message || error.message);
        }
    }

    // Resumo final
    console.log('\n' + '='.repeat(60));
    console.log('üì± RESUMO PARA O FLUTTER APP');
    console.log('='.repeat(60));
    console.log('üîë CREDENCIAIS PARA TESTAR:');
    console.log(`   üë®‚Äç‚öïÔ∏è Nutricionista: ${credenciais.nutricionista.email} / ${credenciais.nutricionista.senha}`);
    console.log(`   üë§ Paciente: ${credenciais.paciente.email} / ${credenciais.paciente.senha}`);
    console.log('');
    console.log('üîó ENDPOINTS DISPON√çVEIS:');
    console.log(`   üì° Login Nutri: POST ${baseURL}/auth/login-nutri`);
    console.log(`   üì° Login Paciente: POST ${baseURL}/auth/login-paciente`);
    console.log(`   üì° Alimentos: GET ${baseURL}/alimentos`);
    console.log(`   üì° Buscar: GET ${baseURL}/alimentos?search=termo`);
    console.log(`   üì° Pacientes: GET ${baseURL}/pacientes (autenticado)`);
    console.log('');
    
    const status = nutriToken && pacienteToken ? '‚úÖ TUDO FUNCIONANDO!' : '‚ö†Ô∏è  ALGUNS PROBLEMAS ENCONTRADOS';
    console.log(`üéØ STATUS: ${status}`);
    console.log('='.repeat(60));
}

// Executa o teste
if (require.main === module) {
    testForFlutter().catch(error => {
        console.error('‚ùå Erro fatal:', error.message);
        process.exit(1);
    });
}

module.exports = testForFlutter;
